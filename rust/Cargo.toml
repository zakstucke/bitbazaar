[package]
name = "bitbazaar"
description = "An assortment of publicly available cross-language utilities useful to my projects."
version = "0.1.1"
edition = "2021"
readme = "README.md"
license = "MIT"

[lib]
name = "bitbazaar"
crate-type = ["lib", "cdylib"] # cdylib allows things like wasm to compile
path = "bitbazaar/lib.rs"


[build-dependencies]
rustc_version = "0.4.0"

[package.metadata.docs.rs]
# For the features to show in docs.rs, need to tell it to include them:
all-features = true

# Add your dependencies here
[dependencies]
parking_lot = { version = "0.12", features = ["deadlock_detection", "serde"] }
tracing = "0.1"
error-stack = "0.4"
colored = '2'
once_cell = '1'
tracing-subscriber = { version = "0.3", features = ["fmt", "std", "time"] }
serde = { version = "1", features = ["derive", "rc"] }
time = { version = "0.3", features = ["local-offset"] }
futures = { version = "0.3", features = [] }
async-semaphore = "1.2"
gloo-timers = { version = "0.3", features = ["futures"] }
itertools = "0.12"
tracing-core = "0.1"

# Not in default, but randomly useful in features:
strum = { version = "0.25", features = ["derive"], optional = true }
serde_json = { version = "1.0", optional = true }
rand = { version = "0.8", optional = true }
uuid = { version = "1.6", features = ["v4"], optional = true }
axum-extra = { version = "0.9", features = [], optional = true }
leptos = { version = "0.6", optional = true }
leptos_axum = { version = "0.6", optional = true }
http = { version = "1", optional = true }
portpicker = { version = '0.1', optional = true }

# FEAT: hash:
sha2 = { version = "0.10", optional = true }

# FEAT: chrono: (but also sometimes enabled by other features)
chrono = { version = '0.4', optional = true }
chrono-humanize = { version = "0.2", optional = true }

# FEAT: log-filter:
regex = { version = '1', optional = true }

# FEAT: timing:
comfy-table = { version = "7.1", optional = true }

# FEAT: cli:
normpath = { version = '1.1', optional = true }
conch-parser = { version = "0.1.1", optional = true }
homedir = { version = "0.2", optional = true }

# FEAT: redis:
deadpool-redis = { version = "0.15", features = ["rt_tokio_1"], optional = true }
redis = { version = "0.25", default-features = false, features = ["aio", "json"], optional = true }
redis-macros = { version = "0.3.0", optional = true }
sha1_smol = { version = "1.0", optional = true }

# FEAT: opentelemetry-(grpc|http):
tracing-log = { version = "0.2", optional = true } # Only needed whilst we're using ot_tracing_bridge.rs
tracing-opentelemetry = { version = "0.22", optional = true }
opentelemetry-appender-tracing = { version = "0.2.0", optional = true }
opentelemetry_sdk = { version = "0.21", features = ["rt-tokio"], optional = true }
opentelemetry = { version = "0.21", default-features = false, features = [
  "trace",
], optional = true }
opentelemetry-otlp = { version = "0.14", default-features = false, features = [
  "logs",
  "trace",
  "metrics",
], optional = true }
opentelemetry-semantic-conventions = { version = "0.13.0", optional = true }

# FEAT: system:
sysinfo = { version = "0.30", optional = true }

# FEAT: rayon:
rayon = { version = "1", optional = true }

# FEAT: cookies:
wasm-cookies = { version = "0.2", optional = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
tracing-subscriber-wasm = "0.1.0"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
# This includes threading (non-blocking stuff that can't be used in wasm)
tracing-appender = '0.2'
hostname = "0.3.1"
tokio = { version = '1', features = ["time", "sync"] }

[dev-dependencies]
rstest = "0.18"
criterion = { version = "0.3", features = ["html_reports", "async_tokio"] }
tempfile = '3.8'
tokio = { version = '1', features = ["full"] }

# When adding new benches, they should be added like this with the name of the file in benches/: (obviously uncommented)
# [[bench]]
# name = "bench_tester"
# harness = false

[features]
log-filter = ["dep:regex"]
hash = ['dep:sha2']
chrono = ['dep:chrono', 'dep:chrono-humanize']
timing = ['dep:comfy-table', 'chrono']
cli = ['dep:normpath', 'dep:conch-parser', 'dep:homedir', 'chrono', 'dep:strum']
system = ['dep:sysinfo']
redis = [
  'dep:deadpool-redis',
  'dep:redis',
  "dep:redis-macros",
  'dep:sha1_smol',
  'dep:serde_json',
  'dep:rand',
  'chrono',
  'dep:uuid',
  'dep:portpicker',
]
opentelemetry-grpc = [
  'dep:tracing-log',
  'dep:opentelemetry-appender-tracing',
  'dep:opentelemetry_sdk',
  'dep:tracing-opentelemetry',
  'dep:opentelemetry',
  'dep:opentelemetry-otlp',
  'dep:opentelemetry-semantic-conventions',
  'dep:http',
  'opentelemetry-otlp/grpc-tonic',
]
opentelemetry-http = [ # In general there's no point with this currently, made for wasm but otlp can't be used on wasm yet (tonic)
  'dep:tracing-log',
  'dep:opentelemetry-appender-tracing',
  'dep:opentelemetry_sdk',
  'dep:tracing-opentelemetry',
  'dep:opentelemetry',
  'dep:opentelemetry-otlp',
  'dep:opentelemetry-semantic-conventions',
  'dep:http',
  'opentelemetry-otlp/grpc-tonic',          # Stupid needed but it currently is due to otlp internals
  'opentelemetry-otlp/http-proto',
  'opentelemetry-otlp/reqwest-client',
]
rayon = ['dep:rayon']

# Cookie deps depending on wasm or not:
cookies_ssr = [
  'chrono',
  'dep:http',
  'dep:serde_json',
  'dep:axum-extra',
  'axum-extra/cookie',
  'dep:leptos',
  'dep:leptos_axum',
]
cookies_wasm = ['chrono', 'dep:http', 'dep:serde_json', 'dep:wasm-cookies']

[profile.release]
strip = "debuginfo" # Note: true or "symbols" seems to break static c linking e.g. with ffmpeg.

[profile.profiler]
inherits = "release" # Adds on top of the default release profile
incremental = true
debug = true
strip = false
